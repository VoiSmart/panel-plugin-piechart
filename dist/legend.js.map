{"version":3,"sources":["../src/legend.js"],"names":["angular","kbn","$","module","directive","popoverSrv","$timeout","link","scope","elem","$container","firstRender","ctrl","panel","data","seriesList","i","events","on","series","color","render","getSeriesIndexForElement","el","parents","toggleSeries","e","currentTarget","index","seriesInfo","scrollPosition","children","scrollTop","updateVariableIfNecessary","sortLegend","stat","legend","sort","sortDesc","getLegendHeaderHtml","statName","name","header","html","cssClass","getLegendPercentageHtml","openColorSelector","target","length","find","show","element","position","template","openOn","model","autoClose","toggleAxis","colorSelected","changeSeriesColor","legendType","empty","append","showValues","values","percentage","tableLayout","toggleClass","legendHeader","valueName","_","sortBy","stats","reverse","total","seriesShown","seriesElements","seriesData","hideEmpty","allIsNull","decimal","percentageDecimals","selectedSeries","alias","label","value","formatValue","pvalue","toFixed","push","maxHeight","height","topPadding","tbodyElem","css"],"mappings":"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","file":"legend.js","sourcesContent":["import angular from 'angular';\n//import _ from  'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport $ from  'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.time';\n\nangular.module('grafana.directives').directive('piechartLegend', function(popoverSrv, $timeout) {\n  return {\n    link: function(scope, elem) {\n      var $container = $('<section class=\"graph-legend\"></section>');\n      var firstRender = true;\n      var ctrl = scope.ctrl;\n      var panel = ctrl.panel;\n      var data;\n      var seriesList;\n      var i;\n\n      ctrl.events.on('render', function() {\n        data = ctrl.series;\n        if (data) {\n          for(var i in data) {\n            data[i].color = ctrl.data[i].color;\n          }\n          render();\n        }\n      });\n\n      function getSeriesIndexForElement(el) {\n        return el.parents('[data-series-index]').data('series-index');\n      }\n\n      function toggleSeries(e) {\n        var el = $(e.currentTarget);\n        var index = getSeriesIndexForElement(el);\n        var seriesInfo = seriesList[index];\n        var scrollPosition = $($container.children('tbody')).scrollTop();\n\n        ctrl.toggleSeries(seriesInfo);\n        ctrl.render();\n        $($container.children('tbody')).scrollTop(scrollPosition);\n        ctrl.updateVariableIfNecessary();\n      }\n\n      function sortLegend(e) {\n        var el = $(e.currentTarget);\n        var stat = el.data('stat');\n\n        if (stat !== panel.legend.sort) { panel.legend.sortDesc = null; }\n\n        // if already sort ascending, disable sorting\n        if (panel.legend.sortDesc === false) {\n          panel.legend.sort = null;\n          panel.legend.sortDesc = null;\n          ctrl.render();\n          return;\n        }\n\n        panel.legend.sortDesc = !panel.legend.sortDesc;\n        panel.legend.sort = stat;\n        ctrl.render();\n      }\n\n      function getLegendHeaderHtml(statName) {\n        var name = statName;\n\n        if (panel.legend.header) {\n          name = panel.legend.header;\n        }\n\n        var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + name;\n\n        if (panel.legend.sort === statName) {\n          var cssClass = panel.legend.sortDesc ? 'fa fa-caret-down' : 'fa fa-caret-up' ;\n          html += ' <span class=\"' + cssClass + '\"></span>';\n        }\n\n        return html + '</th>';\n      }\n\n      function getLegendPercentageHtml(statName) {\n        var name = 'percentage';\n        var html = '<th class=\"pointer\" data-stat=\"' + statName + '\">' + name;\n\n        if (panel.legend.sort === statName) {\n          var cssClass = panel.legend.sortDesc ? 'fa fa-caret-down' : 'fa fa-caret-up' ;\n          html += ' <span class=\"' + cssClass + '\"></span>';\n        }\n\n        return html + '</th>';\n      }\n\n      function openColorSelector(e) {\n        // if we clicked inside poup container ignore click\n        if ($(e.target).parents('.popover').length) {\n          return;\n        }\n\n        var el = $(e.currentTarget).find('.fa-minus');\n        var index = getSeriesIndexForElement(el);\n        var series = seriesList[index];\n\n        $timeout(function() {\n          popoverSrv.show({\n            element: el[0],\n            position: 'bottom center',\n            template: '<series-color-picker series=\"series\" onToggleAxis=\"toggleAxis\" onColorChange=\"colorSelected\">' +\n            '</series-color-picker>',\n            openOn: 'hover',\n            model: {\n              autoClose: true,\n              series: series,\n              toggleAxis: function() {},\n              colorSelected: function(color) {\n                ctrl.changeSeriesColor(series, color);\n              }\n            },\n          });\n        });\n      }\n\n      function render() {\n        if(panel.legendType === 'On graph') {\n          $container.empty();\n          return;\n        }\n\n        if (firstRender) {\n          elem.append($container);\n          $container.on('click', '.graph-legend-icon', openColorSelector);\n          $container.on('click', '.graph-legend-alias', toggleSeries);\n          $container.on('click', 'th', sortLegend);\n          firstRender = false;\n        }\n\n        seriesList = data;\n\n        $container.empty();\n\n        var showValues = panel.legend.values || panel.legend.percentage;\n        var tableLayout = (\n            panel.legendType === 'Under graph' ||\n            panel.legendType === 'Right side'\n            ) && showValues;\n\n        $container.toggleClass('graph-legend-table', tableLayout);\n\n        var legendHeader;\n        if (tableLayout) {\n          var header = '<tr><th colspan=\"2\" style=\"text-align:left\"></th>';\n          if (panel.legend.values) {\n              header += getLegendHeaderHtml(ctrl.panel.valueName);\n          }\n          if (panel.legend.percentage) {\n            header += getLegendPercentageHtml(ctrl.panel.valueName);\n          }\n          header += '</tr>';\n          legendHeader = $(header);\n        }\n\n        if (panel.legend.sort) {\n          seriesList = _.sortBy(seriesList, function(series) {\n            return series.stats[panel.legend.sort];\n          });\n          if (panel.legend.sortDesc) {\n            seriesList = seriesList.reverse();\n          }\n        }\n\n        if (panel.legend.percentage) {\n          var total = 0;\n          for (i = 0; i < seriesList.length; i++) {\n            total += seriesList[i].stats[ctrl.panel.valueName];\n          }\n        }\n\n        var seriesShown = 0;\n        var seriesElements = [];\n\n        for (i = 0; i < seriesList.length; i++) {\n          var series = seriesList[i];\n          var seriesData = ctrl.data[i];\n\n          // ignore empty series\n          if (panel.legend.hideEmpty && series.allIsNull) {\n            continue;\n          }\n          // ignore series excluded via override\n          if (!series.legend) {\n            continue;\n          }\n\n          var decimal = 2;\n          if (ctrl.panel.legend.percentageDecimals) {\n            decimal = ctrl.panel.legend.percentageDecimals;\n          }\n\n          var html = '<div class=\"graph-legend-series';\n          if (ctrl.selectedSeries[series.alias]) { html += ' graph-legend-series-hidden'; }\n          html += '\" data-series-index=\"' + i + '\">';\n          html += '<span class=\"graph-legend-icon\" style=\"float:none;\">';\n          html += '<i class=\"fa fa-minus pointer\" style=\"color:' + seriesData.color + '\"></i>';\n          html += '</span>';\n\n          html += '<a class=\"graph-legend-alias\" style=\"float:none;\">' + seriesData.label + '</a>';\n\n          if (showValues && tableLayout) {\n            var value = series.stats[ctrl.panel.valueName];\n            if (panel.legend.values) {\n              html += '<div class=\"graph-legend-value\">' + ctrl.formatValue(value) + '</div>';\n            }\n            if (total) {\n              var pvalue = ((value / total) * 100).toFixed(decimal) + '%';\n              html += '<div class=\"graph-legend-value\">' + pvalue +'</div>';\n            }\n          }\n\n          html += '</div>';\n\n          seriesElements.push($(html));\n          seriesShown++;\n        }\n\n        if (tableLayout) {\n          var maxHeight = ctrl.height;\n\n          if (panel.legendType === 'Under graph') {\n            maxHeight = maxHeight/2;\n          }\n\n          var topPadding = 6;\n          var tbodyElem = $('<tbody></tbody>');\n          tbodyElem.css(\"max-height\", maxHeight - topPadding);\n          tbodyElem.append(legendHeader);\n          tbodyElem.append(seriesElements);\n          $container.append(tbodyElem);\n        } else {\n          $container.append(seriesElements);\n        }\n      }\n    }\n  };\n});\n\n\n"]}